
import java.awt.Canvas;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.Graphics;
import java.awt.GraphicsEnvironment;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.plaf.basic.BasicArrowButton;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author kolbusz
 */
public class subsetGUI extends javax.swing.JFrame {

    /**
     * Creates new form subsetGUI
     */
    public subsetGUI() {
        initComponents();
        drawButtons();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        populationSize = new javax.swing.JSpinner();
        targetSum = new javax.swing.JSpinner();
        individualTolerance = new javax.swing.JSpinner();
        mutationPropability = new javax.swing.JSpinner();
        mutationNumberInStep = new javax.swing.JSpinner();
        startButton = new javax.swing.JButton();
        importDataCSVBtn = new javax.swing.JButton();
        propabilityOfSettingGene = new javax.swing.JSpinner();
        maxIterationsNumber = new javax.swing.JSpinner();
        maxNumberSetValue = new javax.swing.JSpinner();
        exitBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Problem sumy podzbioru - Algorytm Genetyczny");
        setBackground(new java.awt.Color(126, 164, 17));
        setBounds(new java.awt.Rectangle(600, 150, 0, 0));
        setForeground(java.awt.Color.white);
        setMaximumSize(new java.awt.Dimension(328, 508));
        setMinimumSize(new java.awt.Dimension(328, 508));
        setResizable(false);

        populationSize.setFont(new java.awt.Font("Cantarell", 1, 14)); // NOI18N
        populationSize.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(100), Integer.valueOf(1), null, Integer.valueOf(1)));
        populationSize.setMinimumSize(new java.awt.Dimension(37, 25));
        populationSize.setPreferredSize(new java.awt.Dimension(37, 25));
        populationSize.setRequestFocusEnabled(false);

        targetSum.setFont(new java.awt.Font("Cantarell", 1, 14)); // NOI18N
        targetSum.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        targetSum.setMinimumSize(new java.awt.Dimension(37, 25));
        targetSum.setPreferredSize(new java.awt.Dimension(37, 25));
        targetSum.setRequestFocusEnabled(false);

        individualTolerance.setFont(new java.awt.Font("Cantarell", 1, 14)); // NOI18N
        individualTolerance.setModel(new javax.swing.SpinnerNumberModel(50, 0, 100, 1));
        individualTolerance.setMinimumSize(new java.awt.Dimension(37, 25));
        individualTolerance.setPreferredSize(new java.awt.Dimension(37, 25));
        individualTolerance.setRequestFocusEnabled(false);

        mutationPropability.setFont(new java.awt.Font("Cantarell", 1, 14)); // NOI18N
        mutationPropability.setModel(new javax.swing.SpinnerNumberModel(50.0d, 0.0d, 100.0d, 0.01d));
        mutationPropability.setMinimumSize(new java.awt.Dimension(37, 25));
        mutationPropability.setPreferredSize(new java.awt.Dimension(37, 25));
        mutationPropability.setRequestFocusEnabled(false);

        mutationNumberInStep.setFont(new java.awt.Font("Cantarell", 1, 14)); // NOI18N
        mutationNumberInStep.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(5), Integer.valueOf(0), null, Integer.valueOf(1)));
        mutationNumberInStep.setMinimumSize(new java.awt.Dimension(37, 25));
        mutationNumberInStep.setPreferredSize(new java.awt.Dimension(37, 25));
        mutationNumberInStep.setRequestFocusEnabled(false);

        startButton.setBackground(new java.awt.Color(222, 237, 236));
        startButton.setForeground(new java.awt.Color(50, 75, 85));
        startButton.setText("START - URUCHOM ALGORYTM");
        startButton.setToolTipText("");
        startButton.setBorder(null);
        startButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        startButton.setFocusPainted(false);
        startButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
        startButton.setMaximumSize(new java.awt.Dimension(175, 27));
        startButton.setMinimumSize(new java.awt.Dimension(175, 27));
        startButton.setPreferredSize(new java.awt.Dimension(175, 27));
        startButton.setRequestFocusEnabled(false);
        startButton.setRolloverEnabled(false);
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        importDataCSVBtn.setBackground(new java.awt.Color(222, 237, 236));
        importDataCSVBtn.setForeground(new java.awt.Color(50, 75, 85));
        importDataCSVBtn.setText("IMPORTUJ DANE Z PLIKU CSV");
        importDataCSVBtn.setBorder(null);
        importDataCSVBtn.setBorderPainted(false);
        importDataCSVBtn.setFocusPainted(false);
        importDataCSVBtn.setMargin(new java.awt.Insets(2, 2, 2, 2));
        importDataCSVBtn.setRequestFocusEnabled(false);
        importDataCSVBtn.setRolloverEnabled(false);
        importDataCSVBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importDataCSVBtnActionPerformed(evt);
            }
        });

        propabilityOfSettingGene.setFont(new java.awt.Font("Cantarell", 1, 14)); // NOI18N
        propabilityOfSettingGene.setModel(new javax.swing.SpinnerNumberModel(30, 0, 100, 1));
        propabilityOfSettingGene.setMinimumSize(new java.awt.Dimension(37, 25));
        propabilityOfSettingGene.setPreferredSize(new java.awt.Dimension(37, 25));
        propabilityOfSettingGene.setRequestFocusEnabled(false);

        maxIterationsNumber.setFont(new java.awt.Font("Cantarell", 1, 14)); // NOI18N
        maxIterationsNumber.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(30), Integer.valueOf(1), null, Integer.valueOf(1)));
        maxIterationsNumber.setMinimumSize(new java.awt.Dimension(37, 25));
        maxIterationsNumber.setPreferredSize(new java.awt.Dimension(37, 25));
        maxIterationsNumber.setRequestFocusEnabled(false);

        maxNumberSetValue.setFont(new java.awt.Font("Cantarell", 1, 14)); // NOI18N
        maxNumberSetValue.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        maxNumberSetValue.setMinimumSize(new java.awt.Dimension(37, 25));
        maxNumberSetValue.setPreferredSize(new java.awt.Dimension(37, 25));
        maxNumberSetValue.setRequestFocusEnabled(false);

        exitBtn.setBackground(new java.awt.Color(222, 237, 236));
        exitBtn.setForeground(new java.awt.Color(137, 20, 50));
        exitBtn.setText("ZAMKNIJ APLIKACJÄ˜");
        exitBtn.setBorder(null);
        exitBtn.setInheritsPopupMenu(true);
        exitBtn.setMargin(new java.awt.Insets(2, 2, 2, 2));
        exitBtn.setMaximumSize(new java.awt.Dimension(175, 27));
        exitBtn.setMinimumSize(new java.awt.Dimension(175, 27));
        exitBtn.setPreferredSize(new java.awt.Dimension(175, 27));
        exitBtn.setRequestFocusEnabled(false);
        exitBtn.setRolloverEnabled(false);
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(importDataCSVBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
                    .addComponent(startButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exitBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(targetSum, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                    .addComponent(maxNumberSetValue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(individualTolerance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mutationPropability, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mutationNumberInStep, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(propabilityOfSettingGene, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(maxIterationsNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(populationSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(importDataCSVBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(populationSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(targetSum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(maxNumberSetValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(individualTolerance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(mutationPropability, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(mutationNumberInStep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(propabilityOfSettingGene, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(maxIterationsNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(startButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(2, 2, 2)
                .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(148, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void importDataCSVBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importDataCSVBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_importDataCSVBtnActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startButtonActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exitBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exitBtn;
    private javax.swing.JButton importDataCSVBtn;
    private javax.swing.JSpinner individualTolerance;
    private javax.swing.JSpinner maxIterationsNumber;
    private javax.swing.JSpinner maxNumberSetValue;
    private javax.swing.JSpinner mutationNumberInStep;
    private javax.swing.JSpinner mutationPropability;
    private javax.swing.JSpinner populationSize;
    private javax.swing.JSpinner propabilityOfSettingGene;
    private javax.swing.JButton startButton;
    private javax.swing.JSpinner targetSum;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the individualTolerance
     */
    public javax.swing.JSpinner getIndividualTolerance() {
        return individualTolerance;
    }

    /**
     * @return the populationSize
     */
    public javax.swing.JSpinner getPopulationSize() {
        return populationSize;
    }

    /**
     * @return the targetSum
     */
    public javax.swing.JSpinner getTargetSum() {
        return targetSum;
    }

    /**
     * @return the mutatioNumberInStep
     */
    public javax.swing.JSpinner getMutationNumberInStep() {
        return mutationNumberInStep;
    }

    /**
     * @return the mutationPropability
     */
    public javax.swing.JSpinner getMutationPropability() {
        return mutationPropability;
    }

    /**
     * @return the startButton
     */
    public javax.swing.JButton getStartButton() {
        return startButton;
    }

    /**
     * @return the importDataCSVBtn
     */
    public javax.swing.JButton getImportDataCSVBtn() {
        return importDataCSVBtn;
    }

    /**
     * @return the maxIterationsNumber
     */
    public javax.swing.JSpinner getMaxIterationsNumber() {
        return maxIterationsNumber;
    }

    /**
     * @return the propabilityOfSettingGene
     */
    public javax.swing.JSpinner getPropabilityOfSettingGene() {
        return propabilityOfSettingGene;
    }

    /**
     * @return the maxNumberSetValue
     */
    public javax.swing.JSpinner getMaxNumberSetValue() {
        return maxNumberSetValue;
    }

    /**
     * @return the exitBtn
     */
    public javax.swing.JButton getExitBtn() {
        return exitBtn;
    }
    
    public Container getFrame(){
        return this.getContentPane();
    }
    
    public void drawButtons(){

            ImageIcon icon = new ImageIcon("background.jpg");
            
            Component c = populationSize.getEditor().getComponent(0);
            
            InputStream is;
            Font font;
            
            try {
                is = new FileInputStream(new File("futura_demi.ttf"));
                font = Font.createFont(Font.TRUETYPE_FONT, is);
                exitBtn.setFont(font);
                exitBtn.setFont(exitBtn.getFont().deriveFont(1, (float)15.0));
                importDataCSVBtn.setFont(font);
                importDataCSVBtn.setFont(importDataCSVBtn.getFont().deriveFont(1, (float)15.0));
                startButton.setFont(font);
                startButton.setFont(startButton.getFont().deriveFont(1, (float)15.0));
            } catch (FontFormatException ex) {
                Logger.getLogger(subsetGUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(subsetGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            catch (IOException ex) {
                Logger.getLogger(subsetGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            getContentPane().setBackground(Color.black);
            
            
            
            
            importDataCSVBtn.addMouseListener(new java.awt.event.MouseAdapter(){
                public void mouseEntered(java.awt.event.MouseEvent evt){
                importDataCSVBtn.setBackground(new Color(19, 38, 49));
                importDataCSVBtn.setForeground(new Color(222, 237, 236));
            }
                public void mouseExited(java.awt.event.MouseEvent evt){
                importDataCSVBtn.setBackground(new Color(222, 237, 236));
                importDataCSVBtn.setForeground(new Color(50, 75, 85));
                }
            });


            startButton.addMouseListener(new java.awt.event.MouseAdapter(){
                public void mouseEntered(java.awt.event.MouseEvent evt){
                startButton.setBackground(new Color(19, 38, 49));
                startButton.setForeground(new Color(222, 237, 236));
            }
                public void mouseExited(java.awt.event.MouseEvent evt){
                startButton.setBackground(new Color(222, 237, 236));
                startButton.setForeground(new Color(50, 75, 85));
                }
            });
            
            
            exitBtn.addMouseListener(new java.awt.event.MouseAdapter(){
                public void mouseEntered(java.awt.event.MouseEvent evt){
                exitBtn.setBackground(new Color(137, 20, 50));
                exitBtn.setForeground(new Color(222, 237, 236));
            }
                public void mouseExited(java.awt.event.MouseEvent evt){
                exitBtn.setBackground(new Color(222, 237, 236));
                exitBtn.setForeground(new Color(137, 20, 50));
                }
            });
            
            
            
            JLabel lbl = new JLabel(icon);       
            lbl.setSize(709,719);
            lbl.setLocation(0,0);
                
            getContentPane().add(lbl);
            getContentPane().repaint();
    }
}
